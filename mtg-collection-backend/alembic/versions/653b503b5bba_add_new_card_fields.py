"""Add new card fields

Revision ID: 653b503b5bba
Revises: ff9167425cba
Create Date: 2025-05-18 01:52:08.441765

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '653b503b5bba'
down_revision: Union[str, None] = 'ff9167425cba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('card_definitions', sa.Column('lang', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('mana_cost', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('cmc', sa.Float(), nullable=True))
    op.add_column('card_definitions', sa.Column('oracle_text', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('flavor_text', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('power', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('toughness', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('loyalty', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('colors', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('card_definitions', sa.Column('color_identity', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('card_definitions', sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('card_definitions', sa.Column('rarity', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('artist', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('released_at', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('set_name', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('layout', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('frame', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('border_color', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('full_art', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('textless', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('reprint', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('promo', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('digital', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('foil', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('nonfoil', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('oversized', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('story_spotlight', sa.Boolean(), nullable=True))
    op.add_column('card_definitions', sa.Column('edhrec_rank', sa.Integer(), nullable=True))
    op.add_column('card_definitions', sa.Column('prices', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('card_definitions', sa.Column('card_faces', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('card_definitions', sa.Column('all_parts', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('card_definitions', sa.Column('purchase_uris', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('card_definitions', sa.Column('related_uris', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('card_definitions', sa.Column('scryfall_uri', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('rulings_uri', sa.String(), nullable=True))
    op.add_column('card_definitions', sa.Column('prints_search_uri', sa.String(), nullable=True))
    op.alter_column('card_definitions', 'legalities',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('card_definitions', 'legalities',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_column('card_definitions', 'prints_search_uri')
    op.drop_column('card_definitions', 'rulings_uri')
    op.drop_column('card_definitions', 'scryfall_uri')
    op.drop_column('card_definitions', 'related_uris')
    op.drop_column('card_definitions', 'purchase_uris')
    op.drop_column('card_definitions', 'all_parts')
    op.drop_column('card_definitions', 'card_faces')
    op.drop_column('card_definitions', 'prices')
    op.drop_column('card_definitions', 'edhrec_rank')
    op.drop_column('card_definitions', 'story_spotlight')
    op.drop_column('card_definitions', 'oversized')
    op.drop_column('card_definitions', 'nonfoil')
    op.drop_column('card_definitions', 'foil')
    op.drop_column('card_definitions', 'digital')
    op.drop_column('card_definitions', 'promo')
    op.drop_column('card_definitions', 'reprint')
    op.drop_column('card_definitions', 'textless')
    op.drop_column('card_definitions', 'full_art')
    op.drop_column('card_definitions', 'border_color')
    op.drop_column('card_definitions', 'frame')
    op.drop_column('card_definitions', 'layout')
    op.drop_column('card_definitions', 'set_name')
    op.drop_column('card_definitions', 'released_at')
    op.drop_column('card_definitions', 'artist')
    op.drop_column('card_definitions', 'rarity')
    op.drop_column('card_definitions', 'keywords')
    op.drop_column('card_definitions', 'color_identity')
    op.drop_column('card_definitions', 'colors')
    op.drop_column('card_definitions', 'loyalty')
    op.drop_column('card_definitions', 'toughness')
    op.drop_column('card_definitions', 'power')
    op.drop_column('card_definitions', 'flavor_text')
    op.drop_column('card_definitions', 'oracle_text')
    op.drop_column('card_definitions', 'cmc')
    op.drop_column('card_definitions', 'mana_cost')
    op.drop_column('card_definitions', 'lang')
    # ### end Alembic commands ###
